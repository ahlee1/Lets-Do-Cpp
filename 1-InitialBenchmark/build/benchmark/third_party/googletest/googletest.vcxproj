<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{CF2B258A-7A0F-3AAB-A3DD-C34881AF2AE4}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>googletest</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\258bc6b046498d61d025d79f32e61e2b\googletest-mkdir.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Creating directories for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -Dcfgdir=/Debug -P C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/tmp/googletest-mkdirs.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Debug/googletest-mkdir
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-mkdir</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Creating directories for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -Dcfgdir=/Release -P C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/tmp/googletest-mkdirs.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Release/googletest-mkdir
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-mkdir</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Creating directories for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -Dcfgdir=/MinSizeRel -P C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/tmp/googletest-mkdirs.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/MinSizeRel/googletest-mkdir
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-mkdir</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Creating directories for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -Dcfgdir=/RelWithDebInfo -P C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/tmp/googletest-mkdirs.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/RelWithDebInfo/googletest-mkdir
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-mkdir</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\258bc6b046498d61d025d79f32e61e2b\googletest-download.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Performing download step (git clone) for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -P C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/tmp/googletest-gitclone.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Debug/googletest-download
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\googletest-gitinfo.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-mkdir;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-download</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Performing download step (git clone) for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -P C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/tmp/googletest-gitclone.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Release/googletest-download
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\googletest-gitinfo.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-mkdir;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-download</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Performing download step (git clone) for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -P C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/tmp/googletest-gitclone.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/MinSizeRel/googletest-download
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\googletest-gitinfo.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-mkdir;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-download</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Performing download step (git clone) for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -P C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/tmp/googletest-gitclone.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/RelWithDebInfo/googletest-download
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\googletest-gitinfo.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-mkdir;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-download</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\258bc6b046498d61d025d79f32e61e2b\googletest-update.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Performing update step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\src
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dcan_fetch=YES -P C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/tmp/googletest-gitupdate.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\tmp\googletest-gitupdate.cmake;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\googletest-update-info.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-download;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-update</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Performing update step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\src
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dcan_fetch=YES -P C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/tmp/googletest-gitupdate.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\tmp\googletest-gitupdate.cmake;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\googletest-update-info.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-download;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-update</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Performing update step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\src
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dcan_fetch=YES -P C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/tmp/googletest-gitupdate.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\tmp\googletest-gitupdate.cmake;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\googletest-update-info.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-download;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-update</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Performing update step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\src
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dcan_fetch=YES -P C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/tmp/googletest-gitupdate.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\tmp\googletest-gitupdate.cmake;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\googletest-update-info.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-download;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-update</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\258bc6b046498d61d025d79f32e61e2b\googletest-patch.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">No patch step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Debug/googletest-patch
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\googletest-patch-info.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-update;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-patch</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">No patch step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Release/googletest-patch
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\googletest-patch-info.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-update;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-patch</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">No patch step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/MinSizeRel/googletest-patch
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\googletest-patch-info.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-update;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-patch</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">No patch step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/RelWithDebInfo/googletest-patch
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\googletest-patch-info.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-update;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-patch</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\258bc6b046498d61d025d79f32e61e2b\googletest-configure.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">No configure step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Debug/googletest-configure
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\tmp\googletest-cfgcmd.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-patch;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-configure</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">No configure step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Release/googletest-configure
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\tmp\googletest-cfgcmd.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-patch;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-configure</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">No configure step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/MinSizeRel/googletest-configure
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\tmp\googletest-cfgcmd.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-patch;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-configure</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">No configure step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/RelWithDebInfo/googletest-configure
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\tmp\googletest-cfgcmd.txt;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-patch;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-configure</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\258bc6b046498d61d025d79f32e61e2b\googletest-build.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">No build step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Debug/googletest-build
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-configure;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-build</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">No build step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Release/googletest-build
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-configure;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-build</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">No build step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/MinSizeRel/googletest-build
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-configure;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-build</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">No build step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/RelWithDebInfo/googletest-build
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-configure;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-build</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\258bc6b046498d61d025d79f32e61e2b\googletest-install.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">No install step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Debug/googletest-install
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-install</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">No install step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Release/googletest-install
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-install</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">No install step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/MinSizeRel/googletest-install
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-install</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">No install step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/RelWithDebInfo/googletest-install
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-install</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\258bc6b046498d61d025d79f32e61e2b\googletest-test.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">No test step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Debug/googletest-test
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-install;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-test</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">No test step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Release/googletest-test
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-install;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-test</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">No test step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/MinSizeRel/googletest-test
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-install;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-test</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">No test step for 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/RelWithDebInfo/googletest-test
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-install;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-test</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\1c301af97037ece00f95e348f15228de\googletest-complete.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Completed 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeFiles/Debug
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeFiles/Debug/googletest-complete
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Debug/googletest-done
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-install;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-mkdir;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-download;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-update;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-patch;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-configure;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-build;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Debug\googletest-test;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\Debug\googletest-complete</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Completed 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeFiles/Release
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeFiles/Release/googletest-complete
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/Release/googletest-done
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-install;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-mkdir;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-download;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-update;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-patch;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-configure;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-build;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\Release\googletest-test;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\Release\googletest-complete</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Completed 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeFiles/MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeFiles/MinSizeRel/googletest-complete
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/MinSizeRel/googletest-done
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-install;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-mkdir;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-download;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-update;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-patch;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-configure;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-build;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\MinSizeRel\googletest-test;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\MinSizeRel\googletest-complete</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Completed 'googletest'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeFiles/RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeFiles/RelWithDebInfo/googletest-complete
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/stamp/RelWithDebInfo/googletest-done
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-install;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-mkdir;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-download;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-update;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-patch;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-configure;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-build;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\stamp\RelWithDebInfo\googletest-test;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\RelWithDebInfo\googletest-complete</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\4c231cc7e0ef61a753206f263a045a8c\googletest.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\Debug\googletest-complete;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\googletest</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\Release\googletest-complete;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\googletest</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\MinSizeRel\googletest-complete;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\googletest</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\RelWithDebInfo\googletest-complete;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\googletest</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest -BC:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest --check-stamp-file C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\PatchInfo.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\RepositoryInfo.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\UpdateInfo.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\cfgcmd.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\gitclone.cmake.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\gitupdate.cmake.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\mkdirs.cmake.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\shared_internal_commands.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\3.28.1\CMakeSystem.cmake;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\tmp\googletest-mkdirs.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest -BC:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest --check-stamp-file C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\PatchInfo.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\RepositoryInfo.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\UpdateInfo.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\cfgcmd.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\gitclone.cmake.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\gitupdate.cmake.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\mkdirs.cmake.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\shared_internal_commands.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\3.28.1\CMakeSystem.cmake;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\tmp\googletest-mkdirs.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest -BC:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest --check-stamp-file C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\PatchInfo.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\RepositoryInfo.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\UpdateInfo.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\cfgcmd.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\gitclone.cmake.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\gitupdate.cmake.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\mkdirs.cmake.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\shared_internal_commands.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\3.28.1\CMakeSystem.cmake;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\tmp\googletest-mkdirs.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest -BC:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest --check-stamp-file C:/Users/Alfred/Documents/Github/Lets-Do-Cpp/1-InitialBenchmark/build/benchmark/third_party/googletest/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\PatchInfo.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\RepositoryInfo.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\UpdateInfo.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\cfgcmd.txt.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\gitclone.cmake.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\gitupdate.cmake.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\mkdirs.cmake.in;C:\Program Files\CMake\share\cmake-3.28\Modules\ExternalProject\shared_internal_commands.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\3.28.1\CMakeSystem.cmake;C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\tmp\googletest-mkdirs.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\CMakeFiles\googletest">
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Users\Alfred\Documents\Github\Lets-Do-Cpp\1-InitialBenchmark\build\benchmark\third_party\googletest\ZERO_CHECK.vcxproj">
      <Project>{04314487-2F3A-3940-8799-CA9A0309A82E}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>